-- DROP DATABASE IF EXISTS refinedtech;
CREATE DATABASE refinedtech CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE refinedtech;

-- Buyers Table
CREATE TABLE buyers (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    email_verified_at TIMESTAMP NULL,
    password VARCHAR(255) NOT NULL,
    country VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL,
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'approved',
    remember_token VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
select * from buyers;


-- Sellers Table  
CREATE TABLE sellers (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    email_verified_at TIMESTAMP NULL,
    password VARCHAR(255) NOT NULL,
    country VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL,
    shop_username VARCHAR(255) UNIQUE NOT NULL,
    date_of_birth DATE NOT NULL,
    business_address TEXT NOT NULL,
    national_id_path VARCHAR(255) NULL,
    proof_of_ownership_path VARCHAR(255) NULL,
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending',
    remember_token VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
select * from sellers;


-- Admins Table
CREATE TABLE admins (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    email_verified_at TIMESTAMP NULL,
    password VARCHAR(255) NOT NULL,
    admin_access_code VARCHAR(255) NOT NULL,
    admin_username VARCHAR(255) UNIQUE NOT NULL,
    country VARCHAR(255) NOT NULL,
    id_proof_reference VARCHAR(255) NOT NULL,
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending',
    remember_token VARCHAR(100) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
select * from admins;

-- Personal Access Tokens Table (Required by Laravel Sanctum)
CREATE TABLE personal_access_tokens (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    tokenable_type VARCHAR(255) NOT NULL,
    tokenable_id BIGINT UNSIGNED NOT NULL,
    name VARCHAR(255) NOT NULL,
    token VARCHAR(64) NOT NULL UNIQUE,
    abilities TEXT NULL,
    last_used_at TIMESTAMP NULL,
    expires_at TIMESTAMP NULL,
    created_at TIMESTAMP NULL,
    updated_at TIMESTAMP NULL,
    INDEX personal_access_tokens_tokenable_type_tokenable_id_index (tokenable_type, tokenable_id)
);

-- Admin Access Codes Table
CREATE TABLE admin_access_codes (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    access_code VARCHAR(255) UNIQUE NOT NULL,
    created_by_admin_id BIGINT UNSIGNED NULL,
    used_by_admin_id BIGINT UNSIGNED NULL,
    is_used BOOLEAN DEFAULT FALSE,
    used_at TIMESTAMP NULL,
    description TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by_admin_id) REFERENCES admins(id) ON DELETE SET NULL,
    FOREIGN KEY (used_by_admin_id) REFERENCES admins(id) ON DELETE SET NULL
);
select * from admin_access_codes;


-- drop table admins;

-- Insert initial admin access codes
INSERT INTO admin_access_codes (access_code, description, created_by_admin_id, is_used) VALUES
('ADM-SYSTEM01', 'System generated admin access code #1', NULL, FALSE),
('ADM-SYSTEM02', 'System generated admin access code #2', NULL, FALSE),
('ADM-SYSTEM03', 'System generated admin access code #3', NULL, FALSE);
select * from admin_access_codes;

-- Insert a super admin user (approved by default)
INSERT INTO admins (name, first_name, last_name, email, password, admin_access_code, admin_username, country, id_proof_reference, status, created_at, updated_at) VALUES
('Bijoy', 'Bijoy', 'Admin', 'bijoy@refinedtech.com', '$2y$12$b59UhTSZFanXUF.PPqOD/.wFM1C9BW7Jo1BJ6AIOHuGWWYc1GX8fG', 'ADM-SYSTEM01', 'bijoy', 'System', 'SUPER-ADMIN-001', 'approved', NOW(), NOW());
-- Mark the access code as used by the super admin
UPDATE admin_access_codes SET is_used = TRUE, used_by_admin_id = 1, used_at = NOW() WHERE access_code = 'ADM-SYSTEM01';

select * from admin_access_codes;


-- Insert additional admin access codes generated by the super admin
INSERT INTO admin_access_codes (access_code, description, created_by_admin_id, is_used) VALUES
('ADM-A1B2C3D4', 'Access code generated by Super Admin #1', 1, FALSE),
('ADM-E5F6G7H8', 'Access code generated by Super Admin #2', 1, FALSE),
('ADM-I9J0K1L2', 'Access code generated by Super Admin #3', 1, FALSE),
('ADM-M3N4O5P6', 'Access code generated by Super Admin #4', 1, FALSE),
('ADM-Q7R8S9T0', 'Access code generated by Super Admin #5', 1, FALSE);

select * from admin_access_codes;

select * from admins;
select * from buyers;
select * from sellers;

-- ------------------------------------------------------------------------------------------------

-- Enhanced Products Table for RefinedTech Marketplace
CREATE TABLE products (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    seller_id BIGINT UNSIGNED NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    category VARCHAR(100) NOT NULL,
    subcategory VARCHAR(100),
    brand VARCHAR(100) NOT NULL,
    model VARCHAR(150) NOT NULL,
    sku VARCHAR(100) UNIQUE,
    condition_grade ENUM('like-new', 'excellent', 'good', 'fair') NOT NULL,
    condition_description TEXT,
    price DECIMAL(10,2) NOT NULL,
    original_price DECIMAL(10,2),
    discount_percentage DECIMAL(5,2),
    quantity_available INT DEFAULT 1,
    warranty_period VARCHAR(50),
    return_policy VARCHAR(255),
    shipping_weight DECIMAL(8,2),
    dimensions VARCHAR(100),
    color VARCHAR(50),
    storage_capacity VARCHAR(50),
    ram_memory VARCHAR(50),
    processor VARCHAR(100),
    operating_system VARCHAR(100),
    battery_health VARCHAR(20),
    screen_size VARCHAR(20),
    connectivity TEXT,
    included_accessories TEXT,
    defects_issues TEXT,
    purchase_date DATE,
    usage_duration VARCHAR(50),
    reason_for_selling TEXT,
    images JSON,
    videos JSON,
    tags VARCHAR(255),
    is_featured BOOLEAN DEFAULT FALSE,
    is_urgent_sale BOOLEAN DEFAULT FALSE,
    negotiable BOOLEAN DEFAULT TRUE,
    minimum_price DECIMAL(10,2),
    location_city VARCHAR(100),
    location_state VARCHAR(100),
    shipping_options JSON,
    status ENUM('pending', 'active', 'rejected', 'sold', 'draft') DEFAULT 'active',
    views_count INT DEFAULT 0,
    favorites_count INT DEFAULT 0,
    admin_notes TEXT,
    rejection_reason TEXT,
    approval_date TIMESTAMP NULL,
    approved_by BIGINT UNSIGNED NULL,
    featured_until TIMESTAMP NULL,
    boost_expires_at TIMESTAMP NULL,
    sold_at TIMESTAMP NULL,
    sold_to BIGINT UNSIGNED NULL,
    final_sale_price DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (seller_id) REFERENCES sellers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (approved_by) REFERENCES admins(id) ON DELETE SET NULL,
    FOREIGN KEY (sold_to) REFERENCES buyers(id) ON DELETE SET NULL,
    INDEX idx_seller (seller_id),
    INDEX idx_category (category),
    INDEX idx_brand (brand),
    INDEX idx_condition (condition_grade),
    INDEX idx_price (price),
    INDEX idx_status (status),
    INDEX idx_location (location_city, location_state),
    INDEX idx_featured (is_featured),
    INDEX idx_created (created_at),
    INDEX idx_sku (sku)
);

select * from products;

-- Product Images Table (for better image management)
CREATE TABLE product_images (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    product_id BIGINT UNSIGNED NOT NULL,
    image_path VARCHAR(255) NOT NULL,
    image_type ENUM('main', 'gallery', 'condition', 'defect') DEFAULT 'gallery',
    alt_text VARCHAR(255),
    sort_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
    INDEX idx_product_images (product_id, sort_order)
);

select * from products;
select * from product_images; 

-- Product Categories Reference Table
CREATE TABLE product_categories (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    slug VARCHAR(100) NOT NULL UNIQUE,
    parent_id BIGINT UNSIGNED NULL,
    description TEXT,
    icon VARCHAR(100),
    is_active BOOLEAN DEFAULT TRUE,
    sort_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_id) REFERENCES product_categories(id) ON DELETE SET NULL,
    INDEX idx_parent (parent_id),
    INDEX idx_slug (slug)
);

select * from products;
select * from product_images;
select * from product_categories;

-- Insert default categories
INSERT INTO product_categories (name, slug, description, icon, sort_order) VALUES
('Smartphones', 'smartphones', 'Refurbished mobile phones and accessories', 'üì±', 1),
('Laptops', 'laptops', 'Refurbished laptops and notebooks', 'üíª', 2),
('Tablets', 'tablets', 'Refurbished tablets and e-readers', 'üì±', 3),
('Desktop Computers', 'desktop-computers', 'Refurbished desktop PCs and workstations', 'üñ•Ô∏è', 4),
('Gaming', 'gaming', 'Gaming consoles, accessories and peripherals', 'üéÆ', 5),
('Smart Watches', 'smart-watches', 'Refurbished smartwatches and fitness trackers', '‚åö', 6),
('Audio & Headphones', 'audio-headphones', 'Refurbished headphones, speakers and audio equipment', 'üéß', 7),
('Cameras', 'cameras', 'Refurbished cameras and photography equipment', 'üì∑', 8),
('Accessories', 'accessories', 'Tech accessories, cables, cases and peripherals', 'üîå', 9),
('Other Electronics', 'other-electronics', 'Other refurbished electronic devices', '‚ö°', 10);

select * from products;
select * from product_images;
select * from product_categories;

-- Product Conditions Reference
CREATE TABLE product_conditions (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    grade VARCHAR(20) NOT NULL UNIQUE,
    title VARCHAR(100) NOT NULL,
    description TEXT NOT NULL,
    icon VARCHAR(10),
    color VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

select * from products;
select * from product_images;
select * from product_categories;
select * from product_conditions;

INSERT INTO product_conditions (grade, title, description, icon, color) VALUES
('like-new', 'Like New', 'Excellent condition with minimal signs of use. Functions perfectly with original packaging.', '‚≠ê', 'green'),
('excellent', 'Excellent', 'Great condition with minor cosmetic wear. Functions perfectly with most accessories.', '‚ú®', 'blue'),
('good', 'Good', 'Good condition with noticeable wear but functions well. May lack some accessories.', 'üëç', 'orange'),
('fair', 'Fair', 'Fair condition with significant wear. Functions properly but shows clear usage signs.', 'üëå', 'yellow');

select * from products;
select * from product_images;
select * from product_categories;
select * from product_conditions;

-- Reviews Table
CREATE TABLE reviews (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    product_id BIGINT UNSIGNED NOT NULL,
    reviewer_id BIGINT UNSIGNED NOT NULL,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (reviewer_id) REFERENCES buyers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX(product_id),
    INDEX(reviewer_id)
);

select * from reviews;


-- Conversations Table  
CREATE TABLE conversations (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    seller_id BIGINT UNSIGNED NOT NULL,
    buyer_id BIGINT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (seller_id) REFERENCES sellers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (buyer_id) REFERENCES buyers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX(seller_id),
    INDEX(buyer_id)
);

select * from conversations;

-- Messages Table
CREATE TABLE messages (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    conversation_id BIGINT UNSIGNED NOT NULL,
    sender_id BIGINT UNSIGNED NOT NULL,
    sender_type ENUM('buyer', 'seller') NOT NULL,
    message TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (conversation_id) REFERENCES conversations(id) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX(conversation_id),
    INDEX(sender_id, sender_type)
);

select * from messages;

-- Admin Approvals Table
CREATE TABLE admin_approvals (
    id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    admin_id BIGINT UNSIGNED NOT NULL,
    approved_user_id BIGINT UNSIGNED NOT NULL,
    approved_user_type ENUM('buyer', 'seller', 'admin') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES admins(id) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX(admin_id),
    INDEX(approved_user_id, approved_user_type)
);

select * from admin_approvals;







-- START FROM HERE
USE refinedtech;
-- super_admin's password: password123
-- all other pass: 123456
 
select * from admin_access_codes;
select * from admins;

select * from buyers;
-- DELETE FROM sellers  WHERE id = 3;

select * from products;
select * from product_images;
select * from product_categories;
select * from product_conditions;


select * from reviews;
select * from messages;
select * from conversations;

-- Sample Data Queries --
-- View all buyers
-- SELECT * FROM buyers;

-- View all sellers with their business details
-- SELECT id, name, email, shop_username, business_address, status FROM sellers;

-- View all admins 
-- SELECT id, name, email, admin_username, status FROM admins;

-- View available admin access codes
-- SELECT access_code, description, is_used FROM admin_access_codes WHERE is_used = FALSE;

-- View all products with seller information
-- SELECT p.id, p.title, p.brand, p.model, p.condition_grade, p.price, p.status, s.shop_username as seller_shop
-- FROM products p JOIN sellers s ON p.seller_id = s.id ORDER BY p.created_at DESC;

-- View products by category
-- SELECT category, COUNT(*) as product_count, AVG(price) as avg_price 
-- FROM products WHERE status = 'active' GROUP BY category ORDER BY product_count DESC;

-- View featured products
-- SELECT title, brand, model, price, original_price, discount_percentage, views_count 
-- FROM products WHERE is_featured = TRUE AND status = 'active' ORDER BY views_count DESC;

-- Count users and products by type
-- SELECT 
--     (SELECT COUNT(*) FROM buyers) as total_buyers,
--     (SELECT COUNT(*) FROM sellers) as total_sellers, 
--     (SELECT COUNT(*) FROM admins) as total_admins,
--     (SELECT COUNT(*) FROM products) as total_products,
--     (SELECT COUNT(*) FROM products WHERE status = 'active') as active_products,
--     (SELECT COUNT(*) FROM products WHERE status = 'pending') as pending_products;

-- SUPER ADMIN LOGIN CREDENTIALS --
-- Email: bijoy@refinedtech.com
-- Password: password123 (hashed in database)
-- Username: bijoy
-- Status: approved (ready to use)
--
-- AVAILABLE ADMIN ACCESS CODES FOR NEW ADMINS:
-- ADM-SYSTEM02, ADM-SYSTEM03, ADM-A1B2C3D4, ADM-E5F6G7H8, ADM-I9J0K1L2, ADM-M3N4O5P6, ADM-Q7R8S9T0

-- ENHANCED PRODUCTS SCHEMA NOTES --
-- The products table includes comprehensive attributes for refurbished tech products:
-- * Basic info: title, description, category, brand, model
-- * Condition system: grade (like-new to fair) with detailed descriptions
-- * Pricing: current price, original price, automatic discount calculation, negotiable pricing
-- * Technical specs: storage, RAM, processor, OS, battery health, screen size
-- * Product details: color, dimensions, weight, connectivity, accessories
-- * Marketplace features: featured products, urgent sales, view/favorite counts
-- * Location & shipping: city, state, shipping options
-- * Image management: JSON storage for multiple images and videos
-- * Admin workflow: approval system with notes and rejection reasons
-- * Sales tracking: sold date, buyer info, final sale price
--
-- Supporting tables:
-- * product_images: Structured image management with types and ordering
-- * product_categories: Hierarchical category system with icons and descriptions
-- * product_conditions: Reference table for condition grades with standardized descriptions
